name: Notify Release Job

on:
  workflow_call:
    inputs:
      TYPE:
        description: 'Type of release Notification, e.g. Tag, Github, NPM, Docker, etc'
        type: string
        required: true
      RELEASE_VERSION:
        description: 'Release information, e.g. v{{version}}'
        type: string
        required: true
      RELEASE_URL:
        description: 'Release URL, e.g. https://github.com/{{org}}/{{repository}}/releases/tag/{{version}}'
        type: string
        required: true
      PROJECT:
        description: 'Name of project'
        type: string
        required: false
        default: ${{ github.repository }}
      CHANGE_URL:
        description: 'URL for commit or pr'
        type: string
        required: false
        default: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}
      JOB_URL:
        description: 'URL for Job'
        type: string
        required: false
        default: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      JOB_STATUS:
        description: 'The current status of the job. Possible values are success, failure, or cancelled.'
        type: string
        required: false
        default: ${{ github.action_status }}
      CUSTOM_MSG:
        description: 'Optional custom message'
        type: string
        required: false
    secrets:
      SLACK_BOT_TOKEN:
        description: 'Slack Bot Token'
        required: true
      SLACK_CHANEL:
        description: 'Slack channel'
        required: true

jobs:
  notification:
    runs-on: ubuntu-latest
    steps:
    # - name: Set JOB_STATUS
    #   # if: ${{ inputs.IS_SUCCESS == true }}
    #   env:
    #     IS_SUCCESS: ${{ inputs.IS_SUCCESS }}
    #   run:
    #     if [ "$IS_SUCCESS" == "true" ];
    #     then
    #           echo 'JOB_STATUS=success' >> $GITHUB_ENV
    #     else
    #           echo 'JOB_STATUS=failure' >> $GITHUB_ENV
    #     fi
    # - run: |
    #       if [[ ${{ steps.generate_number.outputs.random_number }} == 0 ]]; then exit
    # - name: if IS_SUCCESS=false then status='failure'
    #   if: ${{ inputs.IS_SUCCESS == false }}
    #   run: echo 'JOB_STATUS=failure' >> $GITHUB_ENV
    # - name: if inputs.RELEASE_VERSION is defined then set version
    #   if: ${{ inputs.RELEASE_VERSION }}
    #   run: echo 'RELEASE_VERSION=${{ inputs.RELEASE_VERSION }}' >> $GITHUB_ENV
    # - name: Set RELEASE_VERSION
    #   # if: ${{ inputs.IS_SUCCESS == true }}
    #   env:
    #     VERSION: ${{ inputs.VERSION }}
    #   run: 
    #     if [ "$VERSION" ]
    #     then
    #           echo 'JOB_STATUS=success' >> $GITHUB_ENV
    #     else
    #           echo 'JOB_STATUS=failure' >> $GITHUB_ENV
    #     fi
    # - name: if inputs.RELEASE_VERSION is NOT defined then set is 'n/a'
    #   if: ${{ !inputs.RELEASE_VERSION }}
    #   run: echo 'RELEASE_VERSION="n/a"' >> $GITHUB_ENV
    # - name: echo github.action_status
    #   run: echo 'RELEASE_VERSION="n/a"' >> $GITHUB_ENV
    - name: echo github.action_status
      run: echo 'JOB_STATUS=${{ inputs.JOB_STATUS }}'

      

    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.19.0
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        channel-id: ${{ secrets.SLACK_CHANEL }}
        # For posting a rich message using Block Kit
        payload: |
          {
            "attachments": [
              {
                "color": "#5abc54",
                "blocks": [
                    {
                        "type": "header",
                        "text": {
                            "type": "plain_text",
                            "text": "${{ inputs.PROJECT }}",
                            "emoji": true
                        }
                    },
                    {
                        "type": "divider"
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "Type: `${{ inputs.TYPE }}`\nTag: `${{ inputs.RELEASE_VERSION }}`"
                        }
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": ":shipit: ${{ inputs.RELEASE_URL }}"
                        }
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "Status: `${{ inputs.JOB_STATUS }}` @ ${{ inputs.CHANGE_URL }}"
                        },
                        "accessory": {
                            "type": "button",
                            "text": {
                                "type": "plain_text",
                                "text": "View",
                                "emoji": true
                            },
                            "value": "visit_job_btn",
                            "url": "${{ inputs.JOB_URL }}",
                            "action_id": "button-action"
                        }
                    },
                    {
                        "type": "divider"
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "${{ inputs.CUSTOM_MSG }} "
                        }
                    }
                ]
              }
            ]
          }
